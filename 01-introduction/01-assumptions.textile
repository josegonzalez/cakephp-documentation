h1. Assumptions

h2. CakePHP

You are reading this because

* Programming and/or Learning is fun
* You find CakePHP interesting
* Would like to learn an MVC framework
* Need to quickly roll out a new feature on a CakePHP project
* Want to write as little code as possible and think it will be provided for you

If you fall into the first 3 categories, we're going to have a great time. If you are in the fourth, do not expect much out of these guides for a long time. If you are in the last, good luck, you're going to need it.

h2. GIT

You should be familiar with @GIT@ version control, if not, there are excellent guides on the following websites:

* "The Progit Book by Scott Schacon":http://progit.org
* "GitReady":http://gitready.com/
* "Gitcasts":http://gitcasts.com/

Much of the programming world is moving towards Distributed Version Control Systems, which @GIT@ is, and @CakePHP@ is currently developed on Github at "http://github.com/cakephp/cakephp":http://github.com/cakephp/cakephp, so learning @GIT@ will be useful in the future.

You'll also need to install a server. If on an OS X machine, you can likely turn on the built-in Apache server, and then issuing the following commands:

<pre><code>cd ~/Sites
git clone http://github.com/cakephp/cakephp
</code></pre>

On a Linux-based operating system, you may be able to do the following - after installing a server of course!:

<pre><code>cd /var/www
git clone http://github.com/cakephp/cakephp
</code></pre>

And on a Windows machine, assuming you have installed WAMP or similar:

<pre><code>cd c:\wamp\www
git clone http://github.com/cakephp/cakephp
</code></pre>

You may need to change the paths accordingly.

h2. Command Line

Knowledge of the command-line and how to use it will never be necessary with these guides. Except for the chapter outlining Cakeshells, there will always be a path for those using the command-line and a separate path for those choosing not to or who are unable to. That said, if you are able to use the command line or would like to learn something new, please consider adding the @cake@ command to your $PATH.

h2. PHP

Deep knowledge of PHP will not be on your part, but this series will strive not to explain what is better explained elsewhere. If you find yourself not knowing what a PHP function does, please consult the PHP Documentation. For example, you may access "http://php.net/str_replace":http://php.net/str_replace for documentation concerning the @str_replace@ function.

For help with outside libraries, if used herein, supplementary material and links to send you in the right direction may also be provided.

For a general purpose PHP tutorial, please read "Practical PHP Programming":http://www.tuxradar.com/practicalphp, available online at TuxRadar for free.

h2. Programming

You should know what a function is, a variable, and some PHP syntax (see above). This guide has been written in mind for first-year Computer Science students at a University, so it is possible to learn this as you go.

h2. HTML/CSS/JS

We will be concentrating on CakePHP and PHP-related functionality for the majority of the time. Even so, we will touch upon ideas and projects that will involve a small amount of Javascript knowledge, and HTML/CSS is handy if only for making your end applications look good.